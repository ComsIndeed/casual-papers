---
// src/components/AppBar.astro

export interface Props {
  title: string;
  showSearchBar?: boolean;
  backHref?: string;
  navLinks?: { name: string; href: string }[];
}

const {
  title,
  showSearchBar = false,
  backHref,
  navLinks = [
    { name: "Home", href: "/" },
    { name: "Articles", href: "/articles" },
    { name: "About", href: "/about" },
  ],
} = Astro.props;

// --- Inline SVG Icons (remain the same) ---
const userIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user"><path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>`;
const arrowLeftIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-left"><path d="m12 19-7-7 7-7"/><path d="M19 12H5"/></svg>`;

import appIcon from "../assets/favicon.png";
import IconButton from "./IconButton.astro";
import { auth } from "../classes/firebase";
---

<header class="app-bar-header">
  <nav class="main-nav">
    {
      backHref && (
        <a href={backHref} class="back-button" aria-label="Go back">
          <Fragment set:html={arrowLeftIcon} />
        </a>
      )
    }

    <h1 class="app-title">
      <img src="/favicon.png" class="app-icon" width="48" height="48" />
      {title}
    </h1>

    <div class="nav-links-wrapper">
      {
        navLinks.map((link) => (
          <a href={link.href} class="nav-link">
            {link.name}
          </a>
        ))
      }
    </div>

    <!-- {
      showSearchBar && (
        <div class="search-bar-wrapper">
          <input type="text" placeholder="Search..." />
          <span class="search-icon">
            <Fragment set:html={searchIcon} />
          </span>
        </div>
      )
    } -->
    <div class="action-buttons">
      <!-- <button class="action-button" aria-label="Settings">
        <Fragment set:html={settingsIcon} />
      </button> -->
      <a href="/signin" class="action-button signInButton" aria-label="Account">
        <IconButton icon="account" label="Account button" />
        <img style="display: none;" width="40" height="40" />
      </a>
    </div>
  </nav>
</header>

<script>
  import { onAuthStateChanged } from "firebase/auth";
  import { auth } from "../classes/firebase";

  const iconButton = document.querySelector(".signInButton .icon-button")!;
  const img = document.querySelector(".signInButton img")!;
  onAuthStateChanged(auth, (user) => {
    if (!user || !user.photoURL) {
      img.setAttribute("style", "display: none;"); // Hide image if not signed in
    } else {
      iconButton.setAttribute("style", "display: none;");
      img.setAttribute("src", user.photoURL); // Use user's photo or default icon
      img.setAttribute("style", "display: block;"); // Show image if signed in
    }
  });
</script>

<style lang="scss">
  // Variables
  $primary-color: #2563eb;
  $text-color-dark: #111827;
  $text-color-medium: #4b5563;
  $text-color-light: #9ca3af;
  $background-color-light: #f3f4f6;
  $border-color-light: #e5e7eb;
  $shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  $shadow-lg:
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);

  .signInButton img {
    border-radius: 10em;
    padding: 0.1em;
    border: 2px solid red;
  }

  .app-title {
    margin: 0.125em 0em;
    font-size: 1.5rem;
    font-weight: 800;
    // Use a text gradient for a colorful effect
    background: linear-gradient(
      to right,
      #6366f1,
      #3b82f6,
      #0ea5e9
    ); // Indigo, Blue, Sky Blue
    -webkit-background-clip: text; // Clip background to text shape
    -webkit-text-fill-color: transparent; // Make text transparent to show gradient
    color: transparent; // Fallback for browsers that don't support text-fill-color
    flex-shrink: 0;

    display: flex;
    align-items: center;
    gap: 0.5em;
  }

  .search-icon {
    display: flex;
    align-items: center;
  }

  .app-bar-header {
    position: sticky; /* Keep it sticky as per your current code */
    top: 0;
    left: 0;
    width: 100%;
    background-color: white;
    box-shadow: $shadow-lg;
    z-index: 50;
    border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
  }

  .main-nav {
    max-width: 1280px; /* Limits width on larger screens */
    margin: 0 4em; /* Centers the nav horizontally */
    padding: 0.75rem 1rem; /* py-3 px-4 */
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: nowrap; /* Prevents wrapping on desktop to keep everything in one line */
    gap: 1rem; /* Default spacing between items */
    min-height: 4rem; /* Ensure a consistent height */

    /* Individual element styling */
    .back-button,
    .action-button {
      padding: 0.5rem;
      border-radius: 9999px; /* Full circle */
      transition: background-color 0.2s ease-in-out;
      cursor: pointer;

      &:hover {
        background-color: $background-color-light;
      }
      &:focus {
        outline: none;
        box-shadow: 0 0 0 4px rgba($primary-color, 0.5); /* Focus ring */
      }
      svg {
        display: block; /* Ensure SVG takes up its own space */
        min-width: 24px; /* Prevent shrinking too much */
        min-height: 24px;
      }
    }

    .app-title {
      font-size: 1.5rem; /* text-2xl */
      font-weight: 800; /* font-extrabold */
      color: $text-color-dark;
      flex-shrink: 0; /* Prevents title from shrinking */
    }

    .nav-links-wrapper {
      display: flex;
      align-items: center;
      gap: 1.5rem; /* Space between nav links */
      flex-shrink: 0; /* Prevents nav links from shrinking */
      // Hide quick nav links on small screens to make space
      @media (max-width: 767px) {
        display: none;
      }

      .nav-link {
        color: $text-color-medium;
        transition: color 0.2s ease-in-out;
        border-radius: 0.375rem; /* rounded-md */
        padding: 0.25rem 0.75rem; /* py-1 px-3 */
        font-size: 0.875rem; /* text-sm */
        font-weight: 500; /* font-medium */
        white-space: nowrap; // Prevent text wrapping

        &:hover {
          color: $primary-color;
          text-decoration: underline;
        }
      }
    }

    .search-bar-wrapper {
      position: relative;
      flex-grow: 1; /* This is the key: takes up all available space */
      margin-left: 1rem; /* Push away from nav links */
      margin-right: 1rem; /* Push away from action buttons */
      min-width: 150px; /* Ensure search bar is usable even if space is tight */

      // Hide search bar on very small screens if it gets too cramped,
      // or if `showSearchBar` is false.
      @media (max-width: 480px) {
        display: none; // You can adjust this breakpoint or logic
      }

      input {
        width: 100%;
        padding-left: 2.5rem; /* pl-10 */
        padding-right: 1rem; /* pr-4 */
        padding-top: 0.5rem; /* py-2 */
        padding-bottom: 0.5rem; /* py-2 */
        border-radius: 9999px; /* rounded-full */
        border: 1px solid $border-color-light;
        box-shadow: $shadow-sm;

        &:focus {
          outline: none;
          box-shadow: 0 0 0 4px rgba($primary-color, 0.5);
          border-color: transparent;
        }
      }

      .search-icon {
        position: absolute;
        left: 0.75rem; /* left-3 */
        top: 50%;
        transform: translateY(-50%);
        color: $text-color-light;
      }
    }

    .action-buttons {
      display: flex;
      align-items: center;
      gap: 0.5rem; /* space-x-2 */
      flex-shrink: 0; /* Prevents buttons from shrinking */
    }

    /* Mobile adjustments: make things wrap if they don't fit */
    @media (max-width: 767px) {
      flex-wrap: wrap; /* Allow wrapping on small screens */
      justify-content: center; /* Center items when wrapped */
      padding: 0.5rem; // Slightly less padding for mobile

      // For very small screens, place title in center and hide other items
      .app-title {
        flex-grow: 1;
        text-align: center;
        order: 2; /* Put title in the middle */
      }
      .back-button {
        order: 1;
        margin-right: auto;
      }
      .action-buttons {
        order: 3;
        margin-left: auto;
      }

      .search-bar-wrapper {
        width: 100%; /* Take full width when wrapped */
        margin: 0.5rem 0; /* Add vertical margin */
        order: 4; /* Place below main nav items */
        min-width: unset; // Remove min-width constraint
      }
    }
  }
</style>
